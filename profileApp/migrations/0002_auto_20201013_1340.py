# Generated by Django 3.1.1 on 2020-10-13 08:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('profileApp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Class',
            fields=[
                ('class_id', models.AutoField(primary_key=True, serialize=False)),
                ('g_name', models.CharField(max_length=30, verbose_name='Group name')),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(null=True)),
                ('url', models.SlugField(blank=True, default='none', null=True)),
            ],
            options={
                'verbose_name': 'class',
                'verbose_name_plural': 'classes',
                'db_table': 'classes',
            },
        ),
        migrations.CreateModel(
            name='Dean',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'dean',
                'verbose_name_plural': 'deans',
                'db_table': 'deans',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('thirdname', models.CharField(blank=True, max_length=30, null=True, verbose_name='Thirdname')),
                ('date_of_birth', models.DateField(null=True, verbose_name='Date of birth')),
                ('phone_number', models.CharField(blank=True, default='+998', max_length=50, null=True, verbose_name='Phone number')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='account_photo/', verbose_name='Upload photo')),
                ('region', models.CharField(default='Tashkent', help_text="Enter user's region (Fergana, Tashkent viloyat, Samarkand)", max_length=30, verbose_name='Region of a Country')),
                ('city', models.CharField(default='Tashkent', help_text="Enter user's city (Fergana, Tashkent, Samarkand)", max_length=30, verbose_name='City')),
                ('passport_series', models.CharField(default='aa', help_text='two letters', max_length=5, verbose_name='Passport series')),
                ('passport_number', models.CharField(max_length=10, verbose_name='Passport number')),
                ('home_address', models.CharField(max_length=70, verbose_name='Home address')),
                ('rating', models.PositiveSmallIntegerField(default=0, verbose_name='Rating')),
                ('reg_date', models.DateField(null=True, verbose_name='Date of registration')),
                ('out_date', models.DateField(null=True, verbose_name='Out date ')),
                ('url', models.SlugField(default='none', null=True)),
            ],
            options={
                'db_table': 'profile',
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('role_id', models.AutoField(primary_key=True, serialize=False)),
                ('role_name', models.CharField(max_length=20, verbose_name='Role name')),
            ],
            options={
                'verbose_name': 'Role',
                'verbose_name_plural': 'Roles',
                'db_table': 'roles',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('u_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='profileApp.profile')),
            ],
            options={
                'verbose_name': 'Teacher',
                'verbose_name_plural': 'Teachers',
                'db_table': 'teachers',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('sub_id', models.AutoField(primary_key=True, serialize=False)),
                ('sub_name', models.CharField(max_length=20, verbose_name='Subject name')),
                ('room_number', models.PositiveSmallIntegerField(verbose_name='Room number')),
                ('url', models.SlugField(blank=True, default='none', null=True)),
                ('teacher', models.ManyToManyField(to='profileApp.Teacher')),
            ],
            options={
                'verbose_name': 'Subject',
                'verbose_name_plural': 'Subjects',
                'db_table': 'subjects',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profileApp.class')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='profileApp.profile')),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Students',
                'db_table': 'students',
            },
        ),
        migrations.AddField(
            model_name='profile',
            name='role',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='profileApp.roles'),
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('f_id', models.AutoField(primary_key=True, serialize=False)),
                ('f_name', models.CharField(max_length=30)),
                ('url', models.SlugField(blank=True, default='none', null=True)),
                ('dean', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='profileApp.dean')),
            ],
            options={
                'db_table': 'faculties',
            },
        ),
        migrations.AddField(
            model_name='dean',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='profileApp.profile'),
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_id', models.AutoField(primary_key=True, serialize=False)),
                ('course_level', models.PositiveSmallIntegerField(verbose_name='Course level')),
                ('course_name', models.CharField(max_length=150, verbose_name='Course name')),
                ('url', models.SlugField(blank=True, default='none', null=True)),
                ('f_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='profileApp.faculty')),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
                'db_table': 'courses',
            },
        ),
        migrations.AddField(
            model_name='class',
            name='course_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='profileApp.course'),
        ),
        migrations.CreateModel(
            name='Books',
            fields=[
                ('book_id', models.AutoField(primary_key=True, serialize=False)),
                ('book_name', models.CharField(max_length=50, verbose_name='Book name')),
                ('book_author', models.CharField(max_length=30, verbose_name='Book author')),
                ('date_published', models.DateField()),
                ('subject', models.ManyToManyField(to='profileApp.Subject')),
            ],
            options={
                'verbose_name': 'Book',
                'verbose_name_plural': 'Books',
                'db_table': 'books',
            },
        ),
    ]
